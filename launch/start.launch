<launch>
  <remap from='/tf_polhemus' to='/tf' />
  <arg name="x_hs" default="1" />
  <arg name="y_hs" default="0" />
  <arg name="z_hs" default="0" />
  <arg name="hands" default="right"/>
  <arg name="product_type" default="viper"/>
  <arg name="node_name" default="polhemus_tf_broadcaster"/>
  <arg name="boresight_calibration_file_path" default="$(find polhemus_ros_driver)/config"/>
  <arg name="boresight_calibration_file_name" default="$(arg product_type)_calibration.yaml"/>
  <arg name="boresight_calibration_file" default="$(arg boresight_calibration_file_path)/$(arg boresight_calibration_file_name)"/>

  <node pkg="polhemus_ros_driver" type="polhemus_tf_broadcaster" name="$(arg node_name)" output="screen">
    <rosparam param="boresight_calibration_file" subst_value="True">$(arg boresight_calibration_file)</rosparam>
    <param name="x_hs" value="$(arg x_hs)" type="int"/>
    <param name="y_hs" value="$(arg y_hs)" type="int"/>
    <param name="z_hs" value="$(arg z_hs)" type="int"/>
    <param name="hands" value="$(arg hands)" type="string"/>
    <param name="product_type" value="$(arg product_type)" type="string"/>
  </node>

  <rosparam command="load" file="$(arg boresight_calibration_file)" ns="$(arg node_name)"/>

  <node name="sr_update_static_tf" pkg="polhemus_ros_driver" type="publish_static_knuckle_tf.py" output="screen"/>
  <node name="sr_knuckle_calibration" pkg="polhemus_ros_driver" type="knuckle_position_calibration_action_server.py" output="screen">
  <param name="hand_side" value="rh" if="$(eval arg('hands') == 'both')" />
      <param name="hand_side" value="$(arg hands)"/>
      <param name="hand_side" value="rh" if="$(eval arg('hands') == 'both')" />
  </node>

</launch>
